      PROGRAM FDROUT
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
!
!
!     port to Linux
!     13-JAN-2006
!     compile this file with gfortran, two steps, first to check for warnings and errors
!     gfortran -c -Wall flrout-jfe-extend-linux.for
!
!     then to link
!     gfortran -o flrout-jfe-extend-linux-exe2 flrout-jfe-extend-linux.o

!     src: flrout-jfe-extend-linux.for
!     obj: flrout-jfe-extend-linux.o
!     bin: flrout-jfe-extend-linux-exe2
!
!	Extended Arrays jfe 18-NOV-2005 change 1201 & 1200 to 60000
!					change 501 to 50000
!
      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
     *      ,PT,TI(60000),QI(60000),QOW(60000),EI(50000),SI(50000)
     *      ,EQ(50000),QE(50000),QT(60000),Q(60000,8),EL(60000)
     *      ,SO(60000),INFILE
!      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
!     *      ,PT,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501)
!     *      ,QE(501),QT(1200),Q(1200,8),EL(1200),SO(1200)
!     *      ,INFILE
!
!      COMMON NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN,PT
!     *      ,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501),QE(501)
!     *      ,QT(1200),Q(1200,8),EL(1200),SO(1200)
!     *      ,INFILE,BL
!
!
      COMMON /GATE/ GEEI
      CHARACTER NFILE*63
      CHARACTER INFILE*63
      CHARACTER NFEAT*10,NFLUD*10,HEADNG*10,SWHEAD*10
C     FOLLOWING LINE ADDED 2/10/90 FOR OUTPUT TO PRINTER
      CHARACTER LINE*135
C
C        CALL INPUT TO INITIALIZE PARAMETERS AND READ ALL INPUT
C
      IRUN=0
      IERR=0
      BL=0
      GEEI=.1
C     NEW STUFF
!   jre mod 30-OCT-2017 to suppress this and allow direct file input
!  4   PRINT*,'                                     '
!      PRINT*,'                    -----------------'
!      PRINT*,'                  FLOOD ROUTING PROGRAM'
!      PRINT*,'                         FLROUT'
!      PRINT*,'                        VER 2.00'
!      PRINT*,'                     REVISED 8/12/93'
!      PRINT*,'                    -----------------'
!      PRINT*,'---------------------------------------------------------'
!      PRINT*,'BEFORE RUNNING FLROUT YOU MUST HAVE AN EXISTING DATA FILE'
!      PRINT*,'             IF YOU DO NOT HAVE A DATA FILE'
!      PRINT*,'           PRESS CONTROL-C TO EXIT THE PROGRAM'
!      PRINT*,'---------------------------------------------------------'
!      PRINT*,'                    -----------------'
!      PRINT*,' UNLESS THE PATH IS INCLUDED WHEN PROVIDING THE DATA FILE'
!      PRINT*,'  OR OUTPUT FILE NAME; THE PROGRAM WILL TRY TO READ FROM'
!      PRINT*,'           OR WRITE TO THE DEFALT DIRECTORY'
!      PRINT*,'                    -----------------'
!      PRINT*,'                    -----------------'
!      PRINT*,'                                                         '
!      PRINT*,'                                                         '
!
!
!	jfe mod 18-NOV-2005 supprese this and set directly to run a new routing
!
!      PRINT*,'DO YOU WANT TO:'
!      PRINT*,'       (1) RUN A NEW ROUTING'
!      PRINT*,'       (2) DISPOSE AN EXISTING OUTPUT FILE TO THE PRINTER'
!      PRINT*,'TYPE 1 OR 2'

	 NTODO = 1
!      READ*,NTODO

      IF(NTODO.EQ.1) GO TO 5
!   jre mod 30-OCT-2017 to suppress this and allow direct file input
!      IF(NTODO.NE.2) GO TO 4

!   jre mod 30-OCT-2017 to suppress this and allow direct file input
!  3   PRINT*,'INPUT EXISTING OUTPUT FILE NAME'
  3   READ(*,'(A)',ERR=3)NFILE
      OPEN(2,FILE=NFILE,ERR=3,STATUS='OLD')
      GO TO 210


!   jre mod 30-OCT-2017 to suppress this and allow direct file input
!  5   PRINT*,'INPUT DATA FILE NAME'
C     NEW STUFF

!   jre mod 30-OCT-2017 to suppress this and allow direct file input
!      PRINT*,'NOTE: PROGRAM READS ONLY ONE DATA PAIR PER LINE FOR'
!      PRINT*,'      FOR INFLOW HYDROGRAPH, ELEVATION STORAGE,'
!      PRINT*,'      AND DISCHARGE RATING CURVE.'
!
!	reads the input file name
!
  5   READ(*,'(A)',ERR=5)NFILE

      INFILE=NFILE

      OPEN(1,FILE=NFILE,ERR=5,STATUS='OLD')
      REWIND 1

      CALL INPUT (IRUN,IERR)

      IF(IERR.NE.0) GO TO 99
      IF(IPOP.EQ.1)GO TO 10

!
!	reads the output file name
!

!   jre mod 30-OCT-2017 to suppress this and allow direct file input
!  6   PRINT*,'INPUT FILE NAME FOR OUTPUT RESULTS'
!   jre mod 30-OCT-2017 to supress need for naming file output (ZZZ)
!  6   READ(*,'(A)',ERR=6)NFILE
  6   NFILE='DATA.OUT'
      OPEN(2,FILE=NFILE,ERR=7,STATUS='NEW')

      GO TO 10
!   jre mod 30-OCT-2017 to suppress this and allow direct file input
!  7   PRINT*,'FILE ALREADY EXISTS'
!      PRINT*,'DO YOU WANT TO OVERWRITE ? (0=NO/1=YES)'
  7	 NTODO = 1
!   jre mod 30-OCT-2017 to suppress this and allow direct file input
!      READ*,NTODO

      IF(NTODO.EQ.0)GO TO 6
      OPEN(2,FILE=NFILE,ERR=6,STATUS='unknown')



  10  IF(IPC(3).EQ.0) GO TO 20


  8   PRINT*,'INPUT FILE NAME FOR PLOT FILE'
      READ(*,'(A)',ERR=8)NFILE
      OPEN(7,FILE=NFILE,ERR=9,STATUS='NEW')
      GO TO 20
  9   PRINT*,'FILE ALREADY EXISTS'
      PRINT*,'DO YOU WANT TO OVERWRITE ? (0=NO/1=YES)'
      READ*,NTODO
      IF(NTODO.EQ.0)GO TO 8
      OPEN(7,FILE=NFILE,ERR=8,STATUS='UNKNOWN')
C
C        CALL ROUT TO ROUTE THE FLOOD OVER THE DAM
C
  20  CALL ROUT (IERR)

      IF(IERR.NE.0) GO TO 30
      IF(IPC(7)-1) 30,22,24
  22     CALL LENGTH (EL,ALEN,ISTOP,IERR)
	 GO TO 26
  24     CALL ELEV (EL,ISTOP,IERR)
  26  IF(ISTOP.EQ.1) GO TO 30
      IF(NR.GT.100.AND.DL.EQ.10.0.AND.DE.EQ.1.0) GO TO 28
      GO TO 20
  28  IF(IPC(9).NE.3) WRITE(6,100) SPWY(MSP,4),SPWY(MSP,3)
      IF(IPC(9).EQ.3) WRITE(6,100) ALEN,SPWY(MSP,3)
  100 FORMAT(/,'  ERROR - INITIAL ESTIMATE OF THE CREST LENGTH OR ',
     +       'ELEVATION',/,10X,'IS NOT CLOSE ENOUGH TO ACTUAL VALUE.',
     +       '  A NEW',/,10X,'ESTIMATE MUST BE PROVIDED.',
     +       /,10X,'LAST USED CREST LENGTH =',F10.1,
     +       /,10X,'LAST USED CREST ELEVATION =',F10.2)
      IERR=10
C
C        CALL SPRINT AND DPRINT TO OBTAIN A LISTING
C
  30  CALL SPRINT (EM,QTM,QIM)
      IF(IPC(2).EQ.0.AND.IPOP.EQ.1) GO TO 40
      CALL DPRINT (IERR)
C
C        CALL PLOTOUT TO OBTAIN PLOT FILE
C
  40  IF(IPC(3).EQ.0) GO TO 50
      IF(IPC(2).EQ.1.OR.IPOP.NE.1) GO TO 42
      IPOP1=IPOP
      IPOP=2
      CALL DPRINT(IERR)
      IPOP=IPOP1
  42  IF(IERR.NE.0) GO TO 50
      CALL PLOTOUT (EM,QTM,QIM)
C
C        CALL NEWRUN TO DETERMINE WHAT TO DO NEXT
C
  50  IF(IPC(10).EQ.0) GO TO 201

!
!	jfe mods 18-NOV-2005
!      CALL NEWRUN (IEND)

!	set value directly
	IEND = 2

C     FOLLOWING LINE CHANGED 2/10/90 '60 CHANGED TO 201'
      IF(IEND.EQ.2) GO TO 201
      IRUN=1
      IERR=0
      GO TO 10
C     OUTPUT TO PRINTER ADDED 2/10/90
 201  IF(IPOP.EQ.1)GO TO 99

!
!	jfe mod 18-nov-2005
! 200  PRINT*,'DO YOU WANT OUTPUT SENT TO PRINTER ? (0=NO/1=YES)'

 200  continue ! suppress printing
!	PRINT*,'DO YOU WANT OUTPUT SENT TO PRINTER ? (0=NO/1=YES)'
!      READ*,NTODO
!	set value directly
	NTODO = 0

      IF(NTODO.EQ.0)GO TO 99

      IF(NTODO.EQ.1)GO TO 210
      GO TO 200
 210  REWIND 2
      OPEN(11,FILE='PRN')
C     RESET LASER PRINTER
      WRITE(11,'(1X,A,''E'')') CHAR(27)
C
C     LETTER GOTHIC LANDSCPE
C
      WRITE(11,'(1X,A,''&l1O'',A,''(0U'')')char(27),char(27)
      WRITE(11,'(1X,A,''(s0p16.66h9.5v0s0b6T'')')char(27)
C
C     SET PAGE LENGTH TO 8 LINES PER INCH
C     SET TOP MARGIN TO 6 LINES
C
      WRITE(11,'(1X,A,''&l8d6E'')')char(27)
 220  READ(2,'(A)',END=230)LINE
      WRITE(11,'(A)')LINE
      GO TO 220
C     RESET LASER PRINTER
 230  WRITE(11,'(1X,A,''E'')')CHAR(27)
      GO TO 99
C     END OF OUTPUT TO PRINTER
C     ALSO ADDED CHARACTER LINE*132  ADDED 2/10/90
C
C        SUBMITTAL OF OUTPUT
C
  99  STOP
      END


      SUBROUTINE INPUT (IRUN,IERR)
C
C        THIS ROUTINE OBTAINS ALL THE INPUT
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
!
!
!	Extended Arrays jfe 18-NOV-2005 change 1201 & 1200 to 60000
!					change 501 to 50000
!
      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
     *      ,PT,TI(60000),QI(60000),QOW(60000),EI(50000),SI(50000)
     *      ,EQ(50000),QE(50000),QT(60000),Q(60000,8),EL(60000)
     *      ,SO(60000),INFILE
!      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
!     *      ,PT,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501)
!     *      ,QE(501),QT(1200),Q(1200,8),EL(1200),SO(1200)
!     *      ,INFILE
!
!      COMMON NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN,PT
!     *      ,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501),QE(501)
!     *      ,QT(1200),Q(1200,8),EL(1200),SO(1200),INFILE,BL
!
!
!
      CHARACTER NFEAT*10,NFLUD*10,HEADNG*10,SWHEAD*10
      CHARACTER INFILE*63
C
C        PRINT OPTION
C
      IF(IRUN.EQ.1) GO TO 74
      PT=1.0
!
!	jfe mod 18-NOV-2005 suppress request
!	and print to file
!

!  2   PRINT 200
  2   continue !protect against some goto trap

!	set value directly
	IPOP = 2
!      READ(*,*,END=999) IPOP
!      IF(IPOP.LT.1.OR.IPOP.GT.3) GO TO 2
C
C        INITIALIZE COMMON
C
      DO 4 I=1,7
      QMAX(I)=0.0
      ISTP(I)=0
      ISCF(I)=0
      DO 6 J=1,7
  6      SPWY(I,J)=0.0
  4   CONTINUE



!
!	JFE mod 18-NOV-2005
!	for array lengths
!	make this match dimension
!	later add variable
!
!      DO 8 I=1,1201
      DO 8 I=1,60000



      TI(I)=0.0
      QI(I)=0.0
  8   QOW(I)=0.0


!
!	JFE mod 18-NOV-2005
!	for array lengths
!	make this match dimension
!	later add variable
!
!      DO 9 I=1,501

      DO 9 I=1,50000



      EI(I)=0.0
      SI(I)=0.0
      EQ(I)=0.0
  9   QE(I)=0.0
C
C        READ HEADING AND IPC PARAMETERS
C
      READ(1,500) (NFEAT(I),I=1,3),(NFLUD(I),I=1,3),(HEADNG(I),I=1,3)
      READ(1,505) (IPC(I),I=1,20)
      IF(IPC(11).EQ.1) WRITE(6,205) (NFEAT(I),I=1,3),(NFLUD(I),I=1,3),
     *                              (HEADNG(I),I=1,3),(IPC(I),I=1,20)
      IF(IPOP.EQ.2) IPC(2)=1
C
C        READ CONSTANTS OF OPERATION
C
      IF(IPC(1).LT.3) GO TO 10
      READ(1,*) NSP,MSP,ELERR,TDIS
      GO TO 12
  10  READ(1,510) NSP,MSP,ELERR,TDIS
  12  IF(IPC(11).EQ.1) WRITE(6,210) NSP,MSP,ELERR,TDIS
C
C        READ RESERVOIR ELEVATIONS
C
      IF(IPC(1).LT.3) GO TO 14
      READ(1,*) ELBEG,ELMAX,ELNOR
      GO TO 16
  14  READ(1,535) ELBEG,ELMAX,ELNOR
  16  IF(IPC(11).EQ.1) WRITE(6,235) ELBEG,ELMAX,ELNOR
      IF(IPC(6).EQ.1) GO TO 32
C
C        READ WATERWAY PARAMETERS (1)
C
      DO 18 I=1,NSP
      READ(1,515) ISTP(I),(SWHEAD(I,J),J=1,3)
      IF(IPC(11).EQ.1) WRITE(6,215) ISTP(I),(SWHEAD(I,J),J=1,3)
  18  CONTINUE
C
C        READ WATERWAY PARAMETERS (2)
C
      DO 20 I=1,NSP
      IF(IPC(1).LT.3) GO TO 22
      READ(1,*) (SPWY(I,J),J=1,7),ISCF(I)
      GO TO 24
  22  READ(1,520) (SPWY(I,J),J=1,7),ISCF(I)
  24  IF(IPC(11).EQ.1) WRITE(6,220) (SPWY(I,J),J=1,7),ISCF(I)
C
C        CHANGE DISCHARGE COEFFICIENT FOR OGEE TO METRIC
C
      GO TO (20,26,20,26) IPC(1)
  26  IF(ISTP(I).GT.2) GO TO 20
      SPWY(I,1)=0.552*SPWY(I,1)
  20  CONTINUE
C
C        READ WATERWAY PARAMETERS (3)
C
      IF(IPC(8).EQ.0) GO TO 32
      IF(IPC(1).LT.3) GO TO 28
      READ(1,*) (QMAX(I),I=1,NSP)
      GO TO 30
  28  READ(1,525) (QMAX(I),I=1,NSP)
  30  IF(IPC(11).EQ.1) WRITE(6,225) (QMAX(I),I=1,NSP)
C
C        READ TIME-INFLOW DATA
C
  32  M=1
  36  IF(IPC(9).EQ.1) GO TO 42
      IF(IPC(1).LT.3) GO TO 38
      READ(1,*) TI(M),QI(M)
      GO TO 40
  38  READ(1,530) TI(M),QI(M)
  40  IF(IPC(11).EQ.1) WRITE(6,230) TI(M),QI(M)
      GO TO 48
  42  IF(IPC(1).LT.3) GO TO 44
      READ(1,*) TI(M),QI(M),QOW(M)
      GO TO 46
  44  READ(1,535) TI(M),QI(M),QOW(M)
  46  IF(IPC(11).EQ.1) WRITE(6,235) TI(M),QI(M),QOW(M)
  48  IF(TI(M).EQ.9999.0.AND.QI(M).EQ.9999.0) GO TO 52
      IF(TI(M).EQ.9999.0.OR.QI(M).EQ.9999.0) IERR=1
      IF(M.EQ.1) GO TO 50
      IF(TI(M).LE.TI(M-1)) IERR=4
  50  IF(IERR.EQ.1) GO TO 90
      IF(IERR.EQ.4) GO TO 96

!
!	JFE mod 18-NOV-2005
!	for array lengths
!	make this match dimension
!	later add variable
!
!      IF(M.GE.1201) GO TO 52

      IF(M.GE.60000) GO TO 52





      M=M+1
      GO TO 36
  52  M=M-1
      IED=M
      N=1
C
C        READ ELEVATION-STORAGE DATA
C
  54  IF(IPC(1).LT.3) GO TO 56
      READ(1,*) EI(N),SI(N)
      GO TO 58
  56  READ(1,530) EI(N),SI(N)
  58  IF(IPC(11).EQ.1) WRITE(6,230) EI(N),SI(N)
      IF(EI(N).EQ.9999.0.AND.SI(N).EQ.9999.0) GO TO 62
      IF(EI(N).EQ.9999.0.OR.SI(N).EQ.9999.0) IERR=2
      IF(N.EQ.1) GO TO 60
      IF(EI(N).LE.EI(N-1)) IERR=5
  60  IF(IERR.EQ.2) GO TO 92
      IF(IERR.EQ.5) GO TO 98

!
!	JFE mod 18-NOV-2005
!	for array lengths
!	make this match dimension
!	later add variable
!
!      IF(N.GE.501) GO TO 62

      IF(N.GE.50000) GO TO 62



      N=N+1
      GO TO 54
  62  N=N-1
      M1=1
C
C        READ ELEVATION-DISCHARGE DATA
C
      IF(IPC(9).LT.2) GO TO 74
      IF(IPC(9).EQ.3) READ(1,*) ALEN
      IF(IPC(9).EQ.3.AND.IPC(11).EQ.1) WRITE(6,230) ALEN
  64  IF(IPC(1).LT.3) GO TO 66
      READ(1,*) EQ(M1),QE(M1)
      GO TO 68
  66  READ(1,530) EQ(M1),QE(M1)
  68  IF(IPC(11).EQ.1) WRITE(6,230) EQ(M1),QE(M1)
      IF(EQ(M1).EQ.9999.0.AND.QE(M1).EQ.9999.0) GO TO 72
      IF(EQ(M1).EQ.9999.0.OR.QE(M1).EQ.9999.0) IERR=3
      IF(M1.EQ.1) GO TO 70
      IF(EQ(M1).LE.EQ(M1-1)) IERR=6
  70  IF(IERR.EQ.3) GO TO 94
      IF(IERR.EQ.6) GO TO 100
!
!	JFE mod 18-NOV-2005
!	for array lengths
!	make this match dimension
!	later add variable
!
!      IF(M1.GE.501) GO TO 72


      IF(M1.GE.50000) GO TO 72


      M1=M1+1
      GO TO 64
  72  M1=M1-1
C
C        DETERMINATION OF LOWEST INVERT ELEVATION
C
  74  ELMIN=50000.0
      IF(IPC(6).EQ.1) GO TO 78
      DO 76 I=1,NSP
      IF(ELMIN.GT.SPWY(I,3)) ELMIN=SPWY(I,3)
  76  CONTINUE
  78  IF(IPC(9).LT.2) GO TO 80
      IF(ELMIN.GT.EQ(1)) ELMIN=EQ(1)
  80  IF(ELMIN.GT.ELNOR.AND.IPC(9).NE.1) ELNOR=ELMIN
      DE=1.0
      DL=10.0
      NR=1
      GO TO 99
  90  WRITE(6,255)
      GO TO 99
  92  WRITE(6,260)
      GO TO 99
  94  WRITE(6,265)
      GO TO 99
  96  WRITE(6,270)
      GO TO 99
  98  WRITE(6,275)
      GO TO 99
  100 WRITE(6,280)
C
C        FORMAT STATEMENTS
C
  200 FORMAT('  DO YOU WISH THE LISTING ON:  (1)  TERMINAL'/
     *       31X,'(2)  FILE'/31X,'(3)  BOTH'/'  TYPE 1, 2, OR 3')
  205 FORMAT(3(2X,3A10,/),2X,20I1)
  210 FORMAT(2X,2I5,F10.3,F10.0)
  215 FORMAT(2X,I1,5X,3A10)
  220 FORMAT(2X,7F10.3,4X,I1)
  225 FORMAT(2X,7F10.0)
  230 FORMAT(2X,2F10.1)
  235 FORMAT(2X,3F10.1)
  255 FORMAT('  ERROR-A VALUE OF 9999.0 APPEARS IN TIME-INFLOW DATA')
  260 FORMAT('  ERROR-A VALUE OF 9999.0 APPEARS IN ELEVATION-',
     *       'STORAGE DATA')
  265 FORMAT('  ERROR-A VALUE OF 9999.0 APPEARS IN ELEVATION-',
     *       'DISCHARGE DATA')
  270 FORMAT('  ERROR - TIME-INFLOW DATA ARE OUT OF ORDER')
  275 FORMAT('  ERROR - ELEVATION-STORAGE DATA ARE OUT OF ORDER')
  280 FORMAT('  ERROR - ELEVATION-DISCHARGE DATA ARE OUT OF ORDER')
  500 FORMAT(3A10,/,3A10,/,3A10)
  505 FORMAT(20I1)
  510 FORMAT(2I5,2F10.0)
  515 FORMAT(I1,1X,3A10)
  520 FORMAT(7F10.0,4X,I1)
  525 FORMAT(7F10.0)
  530 FORMAT(2F10.0)
  535 FORMAT(3F10.0)
  999 IERR=8
  99  RETURN
      END
      SUBROUTINE ROUT (IERR)
C
C        SUBROUTINE TO ROUT THE FLOOD
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
!
!
!	Extended Arrays jfe 18-NOV-2005 change 1201 & 1200 to 60000
!					change 501 to 50000
!
      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
     *      ,PT,TI(60000),QI(60000),QOW(60000),EI(50000),SI(50000)
     *      ,EQ(50000),QE(50000),QT(60000),Q(60000,8),EL(60000)
     *      ,SO(60000),INFILE
!      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
!     *      ,PT,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501)
!     *      ,QE(501),QT(1200),Q(1200,8),EL(1200),SO(1200)
!     *      ,INFILE
!
!
!      COMMON NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN,PT
!     *      ,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501),QE(501)
!     *      ,QT(1200),Q(1200,8),EL(1200),SO(1200),INFILE,BL
!
!
!
      CHARACTER NFEAT*10,NFLUD*10,HEADNG*10,SWHEAD*10
      CHARACTER INFILE*63
C
C        INITIALIZE OUTPUT PARAMETERS
C


!
!	JFE mod 18-NOV-2005
!	for array lengths
!	make this match dimension
!	later add variable
!
!      DO 2 I=1,1200

      DO 2 I=1,60000





      QT(I)=0.0
      EL(I)=0.0
      SO(I)=0.0
	 DO 2 J=1,8
	 Q(I,J)=0.0
  2   CONTINUE
      IST=1
      EL(1)=ELBEG
      FAC=1.0
      IF(IPC(1).EQ.1.OR.IPC(1).EQ.3) FAC=43560.0
C
C        DETERMINE INITIAL STORAGE
C
      IF(ELBEG.GE.EI(1)) GO TO 4
      IERR=1
      GO TO 60
  4   DO 6 I=1,N
      IF(EI(I).LE.ELBEG) GO TO 6
      SO(1)=((SI(I)-SI(I-1))/(EI(I)-EI(I-1)))*(ELBEG-EI(I-1))+SI(I-1)
      GO TO 8
  6   CONTINUE
      IERR=2
      GO TO 60
C
C        DETERMINE INITIAL OUTFLOW
C
  8   CALL DISCH(IST,ELBEG,TDQDE,IERR)
      IF(IERR.NE.0) GO TO 60
      IF((TDIS.EQ.0.0).OR.(QT(1).LE.TDIS)) GO TO 10
      QT(1)=TDIS
  10  IST=2
      IF(QI(1)*PT.GE.QT(1)) GO TO 20
      IF(IPC(4).EQ.1.AND.EL(1).GT.ELNOR) GO TO 20
C
C        DETERMINE TIME WHEN INFLOW EXCEEDS OUTFLOW
C
      IPC(4)=0
      DO 14 I=2,M
      IF(QI(I)*PT.GE.QT(1)) GO TO 16
      QT(I)=QI(I)*PT
      SO(I)=SO(1)
      EL(I)=ELBEG
  14  CONTINUE
      IERR=3
      I=I-1
      QT(1)=QI(1)*PT
      GO TO 60
  16  IST=I
      QT(1)=QI(1)*PT
      DO 18 J=1,8
  18  Q(1,J)=0.0
C
C        BEGIN ROUTING USING GOODRICH METHOD
C
  20  DO 22 I=IST,IED
      DT=(TI(I)-TI(I-1))*3600.0
      CON=PT*(QI(I)+QI(I-1))-QT(I-1)+2.0*SO(I-1)*FAC/DT
      EL(I)=EL(I-1)
C
C        ITERATE TO ELEVATION TOLERANCE USING NEWTONS METHOD
C
      DO 24 IB=1,30
      IF(EL(I).GE.EI(1)) GO TO 26
      IERR=1
      GO TO 60
  26  DO 28 J=1,N
      IF(EI(J).LE.EL(I)) GO TO 28
      DSODE=(SI(J)-SI(J-1))/(EI(J)-EI(J-1))
      SO(I)=DSODE*(EL(I)-EI(J-1))+SI(J-1)
      GO TO 30
  28  CONTINUE
      IERR=2
      GO TO 60
  30  CALL DISCH(I,EL(I),TDQDE,IERR)
      IF(IERR.NE.0) GO TO 60
      IF((TDIS.EQ.0.0).OR.(QT(I).LE.TDIS)) GO TO 32
      QT(I)=TDIS
  32  TRY=QT(I)+2.0*SO(I)*FAC/DT
      ERR=TRY-CON
      IF(ABS(ERR).LT.0.001) ERR=0.0
      DEDEL=TDQDE+(2.0*FAC*DSODE)/DT
      EE=EL(I)-ERR/DEDEL
C
C        ROUT DEBUG
C
      IF(IPC(12).EQ.0) GO TO 38
      IF(IPOP-2) 34,36,34
  34  WRITE(6,200) TI(I),QI(I)*PT,EL(I),EE,QT(I),SO(I)
      IF(IPOP.EQ.1) GO TO 38
  36  WRITE(2,200) TI(I),QI(I)*PT,EL(I),EE,QT(I),SO(I)
C
C        CHECKING OF TOLERANCE
C
  38  IF(ABS(EL(I)-EE).LE.0.002.AND.(IB.NE.1)) GO TO 40
      EL(I)=EE
      IF(EL(I).GT.ELNOR) GO TO 24
      EL(I)=ELNOR
      IF(EE.GE.ELBEG.AND.EL(I-1).LT.ELNOR) EL(I)=EE
  24  CONTINUE
      IF(EL(I).EQ.ELNOR) GO TO 40
      IERR=7
      GO TO 60
C
C        CHECKING RESERVOIR ELEVATIONS
C
  40  IF(EL(I).LE.ELMAX.OR.IPC(5).EQ.0) GO TO 42
      IERR=4
      GO TO 60
  42  IF(EL(I).GT.ELNOR.OR.
     *  (EL(I).GE.ELBEG.AND.EL(I-1).LT.ELNOR)) GO TO 22
      EL(I)=ELNOR
      QT(I)=QI(I)*PT
      DO 44 J=1,8
  44  Q(I,J)=0.0
      DO 46 J=1,N
      IF(EI(J).LE.ELNOR) GO TO 46
      SO(I)=((SI(J)-SI(J-1))/(EI(J)-EI(J-1)))*(ELNOR-EI(J-1))+SI(J-1)
      GO TO 48
  46  CONTINUE
  48  IF(IPC(4).EQ.0.OR.(I.NE.2)) GO TO 22
      QT(1)=QI(1)*PT
      DO 50 J=1,8
  50  Q(1,J)=0.0
  22  CONTINUE
      IST=IST-1
      GO TO 99
  60  IED=I
      IST=IST-1
      GO TO (62,64,66,68,70,72,74) IERR
  62  WRITE(6,210)
      GO TO 99
  64  WRITE(6,220)
      GO TO 99
  66  WRITE(6,230)
      GO TO 99
  68  WRITE(6,240)
      GO TO 99
  70  WRITE(6,250)
      GO TO 99
  72  WRITE(6,260)
      GO TO 99
  74  WRITE(6,270)
C
C        FORMAT STATEMENTS
C
  200 FORMAT(14H  ROUT DEBUG  ,F7.2,4F11.2,F12.0)
  210 FORMAT(/,'  ERROR - RESERVOIR ELEVATION FALLS BELOW STORAGE DATA',
     *       /,10X,'ADD MORE STORAGE DATA')
  220 FORMAT(/,'  ERROR - RESERVOIR ELEVATION EXCEEDS STORAGE DATA',
     *      /,10X,'ADD MORE STORAGE DATA')
  230 FORMAT(/,'  ERROR - OUTFLOW EXCEEDS INFLOW THROUGHOUT ENTIRE ROU',
     *       'TING',/,10X,'BEGINNING RESERVOIR ELEVATION IS MAINTAINED')
  240 FORMAT(/,'  ERROR - RESERVOIR AT MAXIMUM RESERVOIR ELEVATION',
     *       /,10X,'RAISE MAXIMUM ELEVATION')
  250 FORMAT(/,'  ERROR - RESERVOIR ELEVATION LESS THAN DISCHARGE ',
     *       'CURVE DATA',/,10X,'ADD MORE DISCHARGE DATA')
  260 FORMAT(/,'  ERROR - RESERVOIR ELEVATION EXCEEDS DISCHARGE ',
     *       'CURVE DATA',/,10X,'ADD MORE DISCHARGE DATA')
  270 FORMAT(/,'  ERROR - ROUTING DOES NOT CONVERGE AFTER 30 ',
     *       'ITERATIONS',/,10X,'REVIEW INPUT DATA AND CHECK USING THE',
     *       ' ROUT DEBUG')
  99  RETURN
      END
      SUBROUTINE DISCH (IA,EE,TDQDE,IERR)
C
C        SUBROUTINE TO DETERMINE THE INDIVIDUAL OUTFLOWS
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
!
!
!	Extended Arrays jfe 18-NOV-2005 change 1201 & 1200 to 60000
!					change 501 to 50000
!
      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
     *      ,PT,TI(60000),QI(60000),QOW(60000),EI(50000),SI(50000)
     *      ,EQ(50000),QE(50000),QT(60000),Q(60000,8),EL(60000)
     *      ,SO(60000),INFILE
!      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
!     *      ,PT,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501)
!     *      ,QE(501),QT(1200),Q(1200,8),EL(1200),SO(1200)
!     *      ,INFILE
!
!
!      COMMON NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN,PT
!     *      ,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501),QE(501)
!     *      ,QT(1200),Q(1200,8),EL(1200),SO(1200),INFILE,BL
!
!
!
      CHARACTER NFEAT*10,NFLUD*10,HEADNG*10,SWHEAD*10
      CHARACTER INFILE*63
      QQ=0.0
      QT(IA)=0.0
      TDQDE=0.0
C
C        WATERWAY FLOWS
C
      IF(IPC(6).EQ.1) GO TO 12
      DO 10 I=1,NSP
      IF(ISTP(I).EQ.1) CALL OGSPWY(I,EE,QQ,DQDE)
      IF(ISTP(I).EQ.2) CALL GTSPWY(I,EE,QQ,DQDE)
      IF(ISTP(I).EQ.3) CALL WEIR(I,EE,QQ,DQDE)
      IF(ISTP(I).EQ.4) CALL POWEQN(I,EE,QQ,DQDE)
      IF(ISTP(I).EQ.5) CALL LINEQN(I,EE,QQ,DQDE)
      Q(IA,I)=QQ
      QT(IA)=QT(IA)+QQ
      TDQDE=TDQDE+DQDE
  10  CONTINUE
  12  IF(IPC(9).EQ.0) GO TO 30
      IF(IPC(9).GT.1) GO TO 16
C
C        OUTFLOWS RELATIVE TO TIME
C
      QQ=QOW(IA)
      DQDE=0.0
      IF(IA.EQ.1.OR.EE.EQ.EL(IA-1)) GO TO 14
      DQDE=(QOW(IA)-QOW(IA-1))/(EE-EL(IA-1))
  14  GO TO 22
C
C        OUTFLOWS RELATIVE TO ELEVATION
C
  16  QQ=0.0
      DQDE=0.0
      IF(EE.GE.EQ(1)) GO TO 18
      IF(IPC(9).EQ.3) GO TO 22
      IERR=5
      GO TO 22
  18  DO 20 I=1,M1
      IF(EQ(I).LE.EE) GO TO 20
      DQDE=(QE(I)-QE(I-1))/(EQ(I)-EQ(I-1))
      QQ=DQDE*(EE-EQ(I-1))+QE(I-1)
      IF(IPC(9).EQ.2) GO TO 22
      QQ=QQ*ALEN*(EE-EQ(1))**1.5
      IF(QQ.LT.0.0) QQ=0.0
      DQDE=0.0
      IF(EE.LE.EQ(1)) GO TO 22
      DQDE=1.5*QQ/(EE-EQ(1))
      GO TO 22
  20  CONTINUE
      IERR=6
  22  IF(IPC(18).EQ.0) GO TO 28
C
C        DISCH DEBUG
C
      IF(IPOP-2) 24,26,24
  24  WRITE(6,100) EE,QQ,DQDE
      IF(IPOP.EQ.1) GO TO 28
  26  WRITE(2,100) EE,QQ,DQDE
  100 FORMAT(13H  DISCH DEBUG  ,3F10.2)
  28  Q(IA,8)=QQ
      QT(IA)=QT(IA)+QQ
      TDQDE=TDQDE+DQDE
  30  RETURN
      END
      SUBROUTINE OGSPWY (I,EE,QQ,DQDE)
C
C        SUBROUTINE TO CALCULATE FLOW OVER AN OGEE CREST THAT IS
C        UNGATED OR WHERE THE GATES ARE FULLY OPEN.
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
      CO=SPWY(I,1)
      HO=ELMAX-SPWY(I,3)
      IF(IPC(7).NE.2) HO=SPWY(I,2)
      SPWY(I,2)=HO
      QQ=0.0
      DQDE=0.0
      H=EE-SPWY(I,3)
      IF(EE.LE.SPWY(I,3)) GO TO 10
      CALL COEF (CO,HO,H,ISCF(I),C)
      QQ=C*SPWY(I,4)*H**1.5
      IF(QQ.LT.0.0) QQ=0.0
      IF(QMAX(I).EQ.0.0.OR.QQ.LE.QMAX(I)) GO TO 12
      QQ=QMAX(I)
  12  DQDE=1.5*QQ/H
  10  IF(IPC(13).EQ.0) GO TO 18
C
C        DEBUG
C
      IF(IPOP-2) 14,16,14
  14  WRITE(6,100) I,C,H,(SPWY(I,J),J=3,4),EE,QQ,DQDE
      IF(IPOP.EQ.1) GO TO 18
  16  WRITE(2,100) I,C,H,(SPWY(I,J),J=3,4),EE,QQ,DQDE
  100 FORMAT(14H  OGEE DEBUG  ,I2,7F8.2)
  18  RETURN
      END
      SUBROUTINE GTSPWY (I,EE,QQ,DQDE)
C
C        SUBROUTINE TO CALCULATE OUTFLOWS FOR A GATED SPILLWAY
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
      COMMON /GATE/ GEEI
      QQ=0.0
      DQDE=0.0
      C=0.0
      G=32.173
      IF(IPC(1).EQ.2.OR.IPC(1).EQ.4) G=9.806
      CREST=SPWY(I,3)
      GH=SPWY(I,7)
      GHT=SPWY(I,5)-SPWY(I,3)
      IF(GEEI.NE..1) GO TO 10
      GEEI=.1
C
C        CALCULATE GATE OPENING
C
10    IF(EE.LT.SPWY(I,5)) GO TO 50
      N=INT((EE-SPWY(I,5))/GEEI)
      GOPEN=GEEI*N*SPWY(I,6)
      IF(GOPEN.GT.SPWY(I,7)) GOPEN=SPWY(I,7)
C
C        CALCULATE FREE OVERFLOW
C
      CALL OGSPWY(I,EE,QQ,DQDE)

C
C        CALCULATE GATE FLOW
C
      CALL GTCOEF(GHT,GOPEN,C)
      H=EE-SPWY(I,3)
      QGATE=C*GOPEN*SPWY(I,4)*SQRT(2*G*H)
      DQ=1.5*QGATE/H
C
C        SELECT FLOW
C
      IF(QQ.LT.QGATE) GO TO 15
      QQ=QGATE
      DQDE=DQ
  15  IF(QMAX(I).EQ.0.0.OR.QQ.LE.QMAX(I)) GO TO 20
      QQ=QMAX(I)
      DQDE=1.5*QQ/(EE-SPWY(I,3))
C
C        DEBUG
C
  20  IF(IPC(14).EQ.0) GO TO 50
      IF(IPOP-2) 25,30,25
  25  WRITE(6,100) C,SPWY(I,4),SPWY(I,3),H,EE,GOPEN,QQ,DQDE
      IF(IPOP.EQ.1) GO TO 50
  30  WRITE(2,100) C,SPWY(I,4),SPWY(I,3),H,EE,GOPEN,QQ,DQDE
  100 FORMAT(14H  GATED DEBUG ,F4.3,2F8.2,F7.2,F8.2,F5.1,2F9.2)
  50  RETURN
      END
      SUBROUTINE COEF (CO,HO,H,ISCF,C)
C
C        THIS ROUTINE CALCULATES THE DISCHARGE COEFFICIENT FOR
C        AN OGEE CREST WITH FREE OVERFLOW CONDITIONS
C
      X=H/HO
      IF(ISCF.EQ.1) GO TO 12
      IF(X.GE.1.0) GO TO 10
      C=CO*(0.408882*EXP(0.215388*X)+0.4938225*X**0.0887286)
      GO TO 14
  10  C=CO*X**0.1416
      GO TO 14
  12  C=CO*(0.8648+0.2452*X-0.1079*X*X)
  14  RETURN
      END
      SUBROUTINE GTCOEF (GHT,GOPEN,C)
C
C        THIS ROUTINE CALCULATES THE DISCHARGE COEFFICIENT FOR
C        A GATED OVERFLOW OGEE CREST
C
C        RULE OF THUMB VALUES USED FOR HEIGHT OF PIN AND RADIUS OF
C        GATE RELATIVE TO HEIGHT OF GATE
C
      PHI=ACOS(-1.0)
      HPIN=.75*GHT
      RAD=1.25*GHT
      THETA=(ACOS((HPIN-GOPEN)/RAD))*180/PHI
      IF(THETA.LT.50.0) THETA=50.0
      C1=-1.10955303+.06600371*(LOG(THETA))**2
      C2=1147.311397/THETA**1.5-1594.91231*LOG(THETA)/THETA**2
      C=C1+C2
  12  RETURN
      END
      SUBROUTINE WEIR (I,EE,QQ,DQDE)
C
C        THIS ROUTINE CALCULATES THE OUTFLOW FOR BROAD OR
C        SHARP CRESTED WEIRS OF CONSTANT DISCHARGE COEFFICIENT
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
      QQ=0.0
      DQDE=0.0
      H=EE-SPWY(I,3)
      IF(EE.LE.SPWY(I,3)) GO TO 12
      QQ=SPWY(I,1)*SPWY(I,4)*H**1.5
      IF(QQ.LT.0.0) QQ=0.0
      IF(QMAX(I).EQ.0.0.OR.QQ.LE.QMAX(I)) GO TO 10
      QQ=QMAX(I)
  10  DQDE=1.5*QQ/H
C
C        DEBUG
C
  12  IF(IPC(15).EQ.0) GO TO 18
      IF(IPOP-2) 14,16,14
  14  WRITE(6,100) SPWY(I,1),SPWY(I,3),SPWY(I,4),H,EE,QQ,DQDE
      IF(IPOP.EQ.1) GO TO 18
  16  WRITE(2,100) SPWY(I,1),SPWY(I,3),SPWY(I,4),H,EE,QQ,DQDE
  100 FORMAT(14H  WEIR DEBUG  ,7F9.2)
  18  RETURN
      END
      SUBROUTINE POWEQN (I,EE,QQ,DQDE)
C
C        THIS ROUTINE CALCULATES THE OUTFLOW BASED UPON A
C        POWER EQUATION
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
      QQ=0.0
      DQDE=0.0
      H=EE-SPWY(I,3)
      IF(EE.LE.SPWY(I,3)) GO TO 12
      QQ=SPWY(I,1)*H**SPWY(I,5)
      IF(QQ.LT.0.0) QQ=0.0
      IF(QMAX(I).EQ.0.0.OR.QQ.LE.QMAX(I)) GO TO 10
      QQ=QMAX(I)
  10  DQDE=SPWY(I,5)*QQ/H
C
C        DEBUG
C
  12  IF(IPC(16).EQ.0) GO TO 18
      IF(IPOP-2) 14,16,14
  14  WRITE(6,100) SPWY(I,1),SPWY(I,3),SPWY(I,5),H,EE,QQ,DQDE
      IF(IPOP.EQ.1) GO TO 18
  16  WRITE(2,100) SPWY(I,1),SPWY(I,3),SPWY(I,5),H,EE,QQ,DQDE
  100 FORMAT(13H  POWER EQN  ,2F9.2,F9.4,4F9.2)
  18  RETURN
      END
      SUBROUTINE LINEQN (I,EE,QQ,DQDE)
C
C        THIS ROUTINE CALCULATES THE OUTFLOW ACCORDING
C        TO A LINEAR EQUATION
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
      QQ=0.0
      DQDE=0.0
      IF(EE.LE.SPWY(I,3)) GO TO 12
      QQ=SPWY(I,1)*EE + SPWY(I,5)
      IF(QQ.LT.0.0) QQ=0.0
      IF(QMAX(I).EQ.0.0.OR.QQ.LE.QMAX(I)) GO TO 10
      QQ=QMAX(I)
  10  DQDE=SPWY(I,1)
  12  IF(IPC(17).EQ.0) GO TO 18
C
C        DEBUG
C
      IF(IPOP-2) 14,16,14
  14  WRITE(6,100) SPWY(I,1),SPWY(I,5),SPWY(I,3),EE,QQ,DQDE
      IF(IPOP.EQ.1) GO TO 18
  16  WRITE(2,100) SPWY(I,1),SPWY(I,5),SPWY(I,3),EE,QQ,DQDE
  100 FORMAT(14H  OUTLET DEBUG  ,F10.2,F10.4,4F10.2)
  18  RETURN
      END
      SUBROUTINE LENGTH (EL,ALEN,ISTOP,IERR)
C
C        ROUTINE TO ADJUST SPILLWAY LENGTH
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
      DIMENSION EL(1200)
      EM=0.0
      DO 10 I=IST,IED
      IF(EL(I).GT.EM) EM=EL(I)
  10  CONTINUE
      AL=SPWY(MSP,4)
      IF(IPC(9).EQ.3) AL=ALEN
      IF(NR.GT.1) GO TO 12
      ISTOP=0
      ISIGN=1
  12  IF(EM.LT.ELMAX) GO TO 16
      IF(ABS(EM-ELMAX).LT.ELERR) GO TO 20
      IF(ISIGN.EQ.1) GO TO 14
      DL=DL/10.0
  14  ISIGN=1
      AL=AL + DL
      GO TO 18
  16  IF(ABS(EM-ELMAX).LT.ELERR) GO TO 20
      ISIGN=-1
      AL=AL - DL
  18  NR=NR+1
      GO TO 22
  20  ISTOP=1
  22  IF(AL.GT.0.0) GO TO 24
      ISTOP=1
      IERR=8
      WRITE(6,105)
  105 FORMAT(/,'  ERROR - ADJUSTABLE CREST LENGTH ITERATES TO ZERO',/,
     *       10X,'CHECK ROUTING AND WATERWAY PARAMETERS')
  24  IF(IPC(9).EQ.3) ALEN=AL
      IF(IPC(9).NE.3) SPWY(MSP,4)=AL
      IF(IPC(19).EQ.0) GO TO 30
C
C        DEBUG
C
      IF(IPOP-2) 26,28,26
  26  WRITE(6,100) EM,ELMAX,SPWY(MSP,4),DL,NR,ISIGN
      IF(IPOP.EQ.1) GO TO 30
  28  WRITE(2,100) EM,ELMAX,SPWY(MSP,4),DL,NR,ISIGN
  100 FORMAT(14H  LENGTH DEBUG,4F10.3,2I5)
  30  RETURN
      END
      SUBROUTINE ELEV (EL,ISTOP,IERR)
C
C        ROUTINE TO ADJUST SPILLWAY CREST ELEVATION
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
      DIMENSION EL(1200)
      EM=0.0
      DO 10 I=IST,IED
      IF(EL(I).GT.EM) EM=EL(I)
  10  CONTINUE
      IF(NR.GT.1) GO TO 12
      ISTOP=0
      ISIGN=1
  12  IF(EM.GT.ELMAX) GO TO 16
      IF(ABS(EM-ELMAX).LT.ELERR) GO TO 20
      IF(ISIGN.EQ.1) GO TO 14
      DE=DE/10.0
  14  ISIGN=1
      SPWY(MSP,3)=SPWY(MSP,3) + DE
      GO TO 18
  16  IF(ABS(EM-ELMAX).LT.ELERR) GO TO 20
      ISIGN=-1
      SPWY(MSP,3)=SPWY(MSP,3) - DE
  18  NR=NR+1
      GO TO 22
  20  ISTOP=1
  22  IF((ELMAX-SPWY(MSP,3)).GT.0.0) GO TO 24
      ISTOP=1
      IERR=9
      WRITE(6,105)
  105 FORMAT(/,'  ERROR - ADJUSTABLE CREST ELEVATION ITERATES TO THE',
     *       ' MAX. W.S. ELEVATION',/,10X,'CHECK ROUTING AND WATERWAY',
     *       ' PARAMETERS')
  24  IF(IPC(20).EQ.0) GO TO 30
C
C        DEBUG
C
      IF(IPOP-2) 26,28,26
  26  WRITE(6,100) EM,ELMAX,SPWY(MSP,3),DE,NR,ISIGN
      IF(IPOP.EQ.1) GO TO 30
  28  WRITE(2,100) EM,ELMAX,SPWY(MSP,3),DE,NR,ISIGN
  100 FORMAT(14H  LENGTH DEBUG,4F10.3,2I5)
  30  RETURN
      END
      SUBROUTINE SPRINT (EM,QTM,QIM)
C
C        SUMMARY LISTING OF ROUTING RESULTS
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
!
!
!	Extended Arrays jfe 18-NOV-2005 change 1201 & 1200 to 60000
!					change 501 to 50000
!
      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
     *      ,PT,TI(60000),QI(60000),QOW(60000),EI(50000),SI(50000)
     *      ,EQ(50000),QE(50000),QT(60000),Q(60000,8),EL(60000)
     *      ,SO(60000),INFILE
!      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
!     *      ,PT,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501)
!     *      ,QE(501),QT(1200),Q(1200,8),EL(1200),SO(1200)
!     *      ,INFILE
!
!
!      COMMON NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN,PT
!     *      ,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501),QE(501)
!     *      ,QT(1200),Q(1200,8),EL(1200),SO(1200),INFILE,BL
!
!
!
      DIMENSION QM(8),IQM(8),NUM(4)
      CHARACTER INFILE*63
      CHARACTER NFEAT*10,NFLUD*10,HEADNG*10,SWHEAD*10
      DATA (NUM(I),I=1,4)/3H FT,3H M ,4H CFS,4H CMS/
      IM=0
      IF(IPC(1).EQ.2.OR.IPC(1).EQ.4) IM=1
      IOUT=6
      IF(IPOP.EQ.1) GO TO 2
C      BL = 0 For 1st run (no blank page at start of output)
C      BL = 1 For additional runs so each run starts at top of sheet
      IF(BL.EQ.1) WRITE(2,140)
!
!     jfe mod
!
  2   Continue
!      CALL GETDAT(IYR,IMON,IDAY)
!      CALL GETTIM(IHR,IMIN,ISEC,I100TH)
C
C        FIND ROUTING MAXIMUMS
C
      EM=0.0
      QTM=0.0
      QIM=0.0
      EMIN=10000000.0
      DO 6 I=IST,IED
      IF(EL(I).GT.EM) EM=EL(I)
      IF(EL(I).EQ.EM) IEM=I
      IF(I.EQ.IST) GO TO 4
      IF(EL(I).LT.EMIN) IEMIN=I
      IF(EL(I).LT.EMIN) EMIN=EL(I)
  4   IF(QT(I).GT.QTM) QTM=QT(I)
      IF(QT(I).EQ.QTM) IQTM=I
      IF(QI(I)*PT.GT.QIM) QIM=QI(I)*PT
      IF(QI(I)*PT.EQ.QIM) IQIM=I
  6   CONTINUE
      DO 8 I=1,8
      QM(I)=0.0
      IQM(I)=1
      DO 10 J=IST,IED
      IF(Q(J,I).LE.QM(I)) GO TO 10
      QM(I)=Q(J,I)
      IQM(I)=J
  10  CONTINUE
  8   CONTINUE
C
C        LISTING OF ROUTING RESULT SUMMARY
C
  12  WRITE(IOUT,100) (NFEAT(I),I=1,3),IMON,IDAY,IYR,(NFLUD(I),I=1,3),
     *                IHR,IMIN,ISEC,I100TH,
     *                (HEADNG(I),I=1,3),INFILE,TI(IST),TI(IED),ELBEG,
     *                NUM(IM+1),ELNOR,NUM(IM+1),EM,TI(IEM)
      IF(EMIN.LE.ELBEG) WRITE(IOUT,105) EMIN,TI(IEMIN)
      WRITE(IOUT,110) QIM,TI(IQIM),QTM,TI(IQTM)
      IF(TDIS.NE.0.0) WRITE(IOUT,115) TDIS,NUM(IM+3)
      IF(IPC(7).EQ.1.AND.IPC(9).NE.3) WRITE(IOUT,120) SPWY(MSP,4),
     *  NUM(IM+1)
      IF(IPC(7).EQ.1.AND.IPC(9).EQ.3) WRITE(IOUT,120) ALEN,NUM(IM+1)
      IF(IPC(7).EQ.2) WRITE(IOUT,125) SPWY(MSP,3),NUM(IM+1)
      WRITE(IOUT,130) ELERR,NUM(IM+1),PT,(IPC(I),I=1,10)
      NL=24
!
!	comment this out
!
!      pause 'PRESS ENTER TO CONTINUE'
      IF(IPC(6).EQ.1) GO TO 32
C
C        LISTING OF WATERWAY PARAMETERS
C
      WRITE(IOUT,135)
      NL=NL+4
      DO 14 I=1,NSP
      IF(NL.GT.48.AND.IOUT.EQ.2) WRITE(2,140)
      IF(NL.GT.48.AND.IOUT.EQ.2) NL=1
      WRITE(IOUT,145) I,(SWHEAD(I,J),J=1,3)
      GO TO (16,16,24,26,28) ISTP(I)
  16  IF(IPC(1).EQ.1.OR.IPC(1).EQ.3) GO TO 18
      SPWY(I,1)=SPWY(I,1)/0.552
  18  IF(ISTP(I).EQ.2) GO TO 20
      WRITE(IOUT,150)
      IF(ISCF(I).EQ.0) WRITE(IOUT,155)
      IF(ISCF(I).EQ.1) WRITE(IOUT,160)
      GO TO 22
  20  WRITE(IOUT,165)
  22  WRITE(IOUT,170) (SPWY(I,J),J=1,2),NUM(IM+1),SPWY(I,3),NUM(IM+1),
     *                 SPWY(I,4),NUM(IM+1)
      IF(ISTP(I).EQ.2) WRITE(IOUT,175) (SPWY(I,J),J=6,7),NUM(IM+1)
      IF(ISTP(I).EQ.1) NL=NL+9
      IF(ISTP(I).EQ.2) NL=NL+10
      GO TO 30
  24  WRITE(IOUT,180) SPWY(I,1),SPWY(I,3),NUM(IM+1),
     *                SPWY(I,4),NUM(IM+1)
      NL=NL+7
      GO TO 30
  26  WRITE(IOUT,185) SPWY(I,1),SPWY(I,5),SPWY(I,3),NUM(IM+1)
      NL=NL+7
      GO TO 30
  28  WRITE(IOUT,190) SPWY(I,1),SPWY(I,5),NUM(IM+3),
     *                SPWY(I,3),NUM(IM+1)
      NL=NL+7
  30  WRITE(IOUT,195) QM(I),TI(IQM(I))
      NL=NL+1
      IF(QMAX(I).NE.0.0) WRITE(IOUT,200) QMAX(I),NUM(IM+3)
      IF(QMAX(I).NE.0.0) NL=NL+1
  14  CONTINUE
  32  IF(IPOP.EQ.1) GO TO 99
      IF(IOUT.EQ.2) GO TO 99
      IOUT=2
      GO TO 12
C
C        FORMATS
C
  100 FORMAT(/,21X,'UNITED STATES BUREAU OF RECLAMATION',/,
     *      23X,'ENGINEERING AND RESEARCH CENTER',//,
     *      28X,'FLOOD ROUTING FOR DAMS',/,28X,22(1H-),//,
     *      6X,'FEATURE: ',3A10,11X,'DATE ',3X,I2,1H/,I2,1H/,I4,/,
     *      6X,'FLOOD: ',3A10,13X,'TIME ',3X,I2.2,1H:,I2.2,1H:,I2.2,1H.,
     *      I2.2,/,6X,'TITLE: ',3A10,/,6x,'DATA FILE: ',A,//,
     *      6X,'FLOOD ROUTING SUMMARY',/,6X,21(1H*),//,
     *      9X,'BEGINNING HOUR OF ROUTING',23(1H.),F10.2,/,
     *      9X,'ENDING HOUR OF ROUTING',26(1H.),F10.2,/,
     *      9X,'INITIAL RESERVOIR ELEVATION',21(1H.),F10.2,A3,/,
     *      9X,'MINIMUM OR NORMAL POOL ELEV',21(1H.),F10.2,A3,/,
     *     9X,'MAXIMUM RESERVOIR ELEVATION.....',F10.2,8H AT HOUR,F8.2)
  105 FORMAT(9X,'MINIMUM RESERVOIR ELEVATION.....',F10.2,
     *      8H AT HOUR,F8.2)
  110 FORMAT(9X,'INFLOW PEAK DISCHARGE',11(1H.),F10.0,8H AT HOUR,F8.2,/,
     *      9X,'MAXIMUM TOTAL OUTFLOW',11(1H.),F10.0,8H AT HOUR,F8.2)
  115 FORMAT(9X,'TOTAL OUTFLOW CONTROLLED NOT TO EXCEED',10(1H.),
     *       F10.0,A4)
  120 FORMAT(9X,'ADJUSTED LENGTH OF MAIN SPILLWAY',16(1H.),F10.2,A3)
  125 FORMAT(9X,'ADJUSTED ELEVATION OF MAIN SPILLWAY',13(1H.),F10.2,A3)
  130 FORMAT(9X,'ELEVATION TOLERANCE',29(1H.),F10.4,A3,/,
     *       9X,'INFLOW HYDROGRAPH ADJUSTMENT FACTOR',13(1H.),F10.2,/,
     *       9X,'IPC OPTIONS (1 TO 10)',27(1H.),10I1)
  135 FORMAT(/,6X,'WATERWAY PARAMETERS',/,6X,19(1H*))
  140 FORMAT(1H1)
  145 FORMAT(/,9X,'WATERWAY NO. ',I1,3H - ,3A10,/)
  150 FORMAT(9X,'TYPE-OGEE CREST SPILLWAY, UNGATED OR GATES OPEN')
  155 FORMAT(9X,'COEFFICIENT IS COMPUTED BY FIG. 34 OF MONOGRAPH 9')
  160 FORMAT(9X,'COEFFICIENT IS COMPUTED BY FIG. 35 OF MONOGRAPH 9')
  165 FORMAT(9X,'TYPE-OGEE CREST SPILLWAY, GATE CONTROL')
  170 FORMAT(9X,'DESIGN DISCHARGE COEFFICIENT (CO)',15(1H.),F10.2,/,
     *       9X,'DESIGN HEAD (HO)',32(1H.),F10.2,A3,/,
     *       9X,'CREST ELEVATION',33(1H.),F10.2,A3,/,
     *       9X,'CREST LENGTH',36(1H.),F10.2,A3)
  175 FORMAT(9X,'GATE OPENING RATIO',30(1H.),F10.2,/,
     *       9X,'GATE HEIGHT',37(1H.),F10.2,A3)
  180 FORMAT(9X,'TYPE-BROAD OR SHARP CRESTED WEIR',/,
     *       9X,'CONSTANT DISCHARGE COEFFICIENT',18(1H.),F10.2,/,
     *       9X,'CREST ELEVATION',33(1H.),F10.2,A3,/,
     *       9X,'CREST LENGTH',36(1H.),F10.2,A3)
  185 FORMAT(9X,'TYPE-DISCHARGE BY POWER EQUATION',/,
     *       9X,'COEFFICIENT',37(1H.),F10.2,/,
     *       9X,'EXPONENT ON HEAD',32(1H.),F10.4,/,
     *       9X,'CREST ELEVATION',33(1H.),F10.2,A3)
  190 FORMAT(9X,'TYPE-DISCHARGE BY LINEAR EQUATION',/,
     *       9X,'COEFFICIENT',37(1H.),F10.2,/,
     *       9X,'CONSTANT',40(1H.),F10.2,A4,/,
     *       9X,'CREST ELEVATION',33(1H.),F10.2,A3)
  195 FORMAT(9X,'MAXIMUM DISCHARGE',15(1H.),F10.0,8H AT HOUR,F8.2)
  200 FORMAT(9X,'MAXIMUM FLOW LIMITED TO',25(1H.),F10.0,A4)
  99  RETURN
      END
      SUBROUTINE DPRINT (IERR)
C
C        ROUTINE FOR DETAILED LISTING OF ROUTING RESULTS
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
!
!
!	Extended Arrays jfe 18-NOV-2005 change 1201 & 1200 to 60000
!					change 501 to 50000
!
      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
     *      ,PT,TI(60000),QI(60000),QOW(60000),EI(50000),SI(50000)
     *      ,EQ(50000),QE(50000),QT(60000),Q(60000,8),EL(60000)
     *      ,SO(60000),INFILE
!      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
!     *      ,PT,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501)
!     *      ,QE(501),QT(1200),Q(1200,8),EL(1200),SO(1200)
!     *      ,INFILE
!
!
!      COMMON NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN,PT
!     *      ,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501),QE(501)
!     *      ,QT(1200),Q(1200,8),EL(1200),SO(1200),INFILE,BL
!
!
!
      CHARACTER NFEAT*10,NFLUD*10,HEADNG*10,SWHEAD*10
      CHARACTER INFILE*63
      NSP1=NSP
      IF(NSP.EQ.0) NSP=1
      IPOP3=IPOP
      IF(IPC(2).EQ.0) IPOP=2
C
C        HEADINGS
C
      IF(IPOP-2) 2,4,2
  2   WRITE(6,200)
      IF(IPOP.EQ.1) GO TO 6
C     NEW WRITE STATEMENTS
  4   IF(NSP.EQ.1)GO TO 900
      IF(NSP.EQ.2)GO TO 901
      IF(NSP.EQ.3)GO TO 902
      IF(NSP.EQ.4)GO TO 903
      IF(NSP.EQ.5)GO TO 904
      IF(NSP.EQ.6)GO TO 905
      WRITE(2,957)((I),I=1,NSP)
      GO TO 6
 900  WRITE(2,951)((I),I=1,NSP)
      GO TO 6
 901  WRITE(2,952)((I),I=1,NSP)
      GO TO 6
 902  WRITE(2,953)((I),I=1,NSP)
      GO TO 6
 903  WRITE(2,954)((I),I=1,NSP)
      GO TO 6
 904  WRITE(2,955)((I),I=1,NSP)
      GO TO 6
 905  WRITE(2,956)((I),I=1,NSP)
C
C        ROUTING RESULTS
C
  6   DO 8 I=IST,IED
      IF(IPOP-2) 10,12,10
  10  WRITE(6,205) TI(I),QI(I)*PT,QT(I),SO(I),EL(I)
      IF(IPOP.EQ.1) GO TO 8
  12  GO TO (14,16,14,16) IPC(1)
  14  WRITE(2,605) TI(I),QI(I)*PT,QT(I),SO(I),EL(I),(Q(I,J),J=1,NSP),
     *             Q(I,8)
      GO TO 8
  16  WRITE(2,610) TI(I),QI(I)*PT,QT(I),SO(I),EL(I),(Q(I,J),J=1,NSP),
     *             Q(I,8)
  8   CONTINUE
      IF(IERR.EQ.0) GO TO 18
      IOUT=6
  20  GO TO (22,24,26,28,30,32,34,36,38,39) IERR
  22  WRITE(IOUT,300)
      GO TO 40
  24  WRITE(IOUT,305)
      GO TO 40
  26  WRITE(IOUT,310)
      GO TO 40
  28  WRITE(IOUT,315)
      GO TO 40
  30  WRITE(IOUT,320)
      GO TO 40
  32  WRITE(IOUT,325)
      GO TO 40
  34  WRITE(IOUT,330)
      GO TO 40
  36  WRITE(IOUT,335)
      GO TO 40
  38  WRITE(IOUT,340)
      GO TO 40
  39  WRITE(IOUT,345) ALEN,SPWY(MSP,3)
  40  IF(IPOP.EQ.1.OR.IOUT.EQ.2) GO TO 18
      IOUT=2
      GO TO 20
C
C        DISCHARGE RESULTS FOR TERMINAL LISTING
C
  18  IF(IPOP.EQ.2) GO TO 48
C     NEW WRITE STATEMENTS
      IF(NSP.EQ.1)GO TO 800
      IF(NSP.EQ.2)GO TO 801
      IF(NSP.EQ.3)GO TO 802
      IF(NSP.EQ.4)GO TO 803
      IF(NSP.EQ.5)GO TO 804
      IF(NSP.EQ.6)GO TO 805
      WRITE(6,707)
      GO TO 19
 800  WRITE(6,701)
      GO TO 19
 801  WRITE(6,702)
      GO TO 19
 802  WRITE(6,703)
      GO TO 19
 803  WRITE(6,704)
      GO TO 19
 804  WRITE(6,705)
      GO TO 19
 805  WRITE(6,706)
  19  IF(TDIS.EQ.0.0) GO TO 42
      WRITE(6,220)
C     NEW WRITE STATEMENTS
  42  IF(NSP.EQ.1)GO TO 810
      IF(NSP.EQ.2)GO TO 811
      IF(NSP.EQ.3)GO TO 812
      IF(NSP.EQ.4)GO TO 813
      IF(NSP.EQ.5)GO TO 814
      IF(NSP.EQ.6)GO TO 815
      WRITE(6,717)((I),I=1,NSP)
      GO TO 43
 810  WRITE(6,711)((I),I=1,NSP)
      GO TO 43
 811  WRITE(6,712)((I),I=1,NSP)
      GO TO 43
 812  WRITE(6,713)((I),I=1,NSP)
      GO TO 43
 813  WRITE(6,714)((I),I=1,NSP)
      GO TO 43
 814  WRITE(6,715)((I),I=1,NSP)
      GO TO 43
 815  WRITE(6,716)((I),I=1,NSP)
  43  DO 44 I=IST,IED
  44  WRITE(6,230) TI(I),(Q(I,J),J=1,NSP),Q(I,8)
C
C        PRINTING OF INPUT
C
  46  WRITE(6,235)
      READ(5,*,END=46) IPNT
      IF(IPNT.LT.1.OR.IPNT.GT.2) GO TO 46
      IF(IPNT.EQ.2.AND.IPOP.EQ.1) GO TO 99
      IF(IPNT.EQ.2.AND.IPOP.EQ.3) GO TO 48
      IOUT=6
      GO TO 50
  48  IOUT=2
  50  IF(IOUT.EQ.2) WRITE(2,615)
      IF(IPC(9).EQ.1) WRITE(IOUT,240)
      IF(IPC(9).NE.1) WRITE(IOUT,245)
      IA=M
      IF(N.LT.M) IA=N
      DO 52 I=1,IA
      IF(IPC(9).EQ.1) WRITE(IOUT,250) TI(I),QI(I)*PT,QOW(I),EI(I),SI(I)
      IF(IPC(9).NE.1) WRITE(IOUT,255) TI(I),QI(I)*PT,EI(I),SI(I)
  52  CONTINUE
      IF(N.LE.M) GO TO 56
      IA=M+1
      DO 54 I=IA,N
      WRITE(IOUT,260) EI(I),SI(I)
  54  CONTINUE
  56  IF(N.GE.M) GO TO 60
      IA=N+1
      DO 58 I=IA,M
      IF(IPC(9).EQ.1) WRITE(IOUT,265) TI(I),QI(I)*PT,QOW(I)
      IF(IPC(9).NE.1) WRITE(IOUT,270) TI(I),QI(I)*PT
  58  CONTINUE
  60  IF(IPC(9).LT.2) GO TO 99
C
C        LISTING OF ELEVATION VS DISCHARGE
C
      IF(IOUT.EQ.2) WRITE(2,615)
      IF(IPC(9).EQ.2) WRITE(IOUT,275)
      IF(IPC(9).EQ.3) WRITE(IOUT,280) ALEN
      DO 62 I=1,M1
      IF(IPC(9).EQ.2) WRITE(IOUT,285) EQ(I),QE(I)
      IF(IPC(9).EQ.3) WRITE(IOUT,290) EQ(I),QE(I)
  62  CONTINUE
      IF(IPOP.EQ.3.AND.IOUT.EQ.6) GO TO 48
C
C        FORMATS
C
  200 FORMAT(//,23X,15HROUTING RESULTS,/,23X,15(1H*),/,4X,
     *   53HTIME      INFLOW     OUTFLOW     STORAGE    ELEVATION,/)
  205 FORMAT(2X,F7.2,3F12.0,F11.2)
C   NEW FORMAT STATEMENTS
  701 FORMAT(//,4X,5X,17HDISCHARGE RESULTS,/,4X,5X,17(1H*))
  702 FORMAT(//,4X,10X,17HDISCHARGE RESULTS,/,4X,10X,17(1H*))
  703 FORMAT(//,4X,15X,17HDISCHARGE RESULTS,/,4X,15X,17(1H*))
  704 FORMAT(//,4X,20X,17HDISCHARGE RESULTS,/,4X,20X,17(1H*))
  705 FORMAT(//,4X,25X,17HDISCHARGE RESULTS,/,4X,25X,17(1H*))
  706 FORMAT(//,4X,30X,17HDISCHARGE RESULTS,/,4X,30X,17(1H*))
  707 FORMAT(//,4X,35X,17HDISCHARGE RESULTS,/,4X,35X,17(1H*))
  220 FORMAT(/,51H   NOTE:  ACTUAL DISCHARGE VALUES ARE PRINTED.  THE,
     *       8H LIMITED,/,10X,34HMAXIMUM DISCHARGE WAS USED IN THE ,
     *       7HROUTING,/)
  711 FORMAT(4X,4HTIME,3X,8HWATERWAY,2X,9HDISCHARGE,
     *       /,5X,9X,I1,8X,5HCURVE,/)
  712 FORMAT(4X,4HTIME,8X,8HWATERWAY,7X,9HDISCHARGE,
     *       /,5X,2(9X,I1),8X,5HCURVE,/)
  713 FORMAT(4X,4HTIME,13X,8HWATERWAY,12X,9HDISCHARGE,
     *       /,5X,3(9X,I1),8X,5HCURVE,/)
  714 FORMAT(4X,4HTIME,18X,8HWATERWAY,17X,9HDISCHARGE,
     *       /,5X,4(9X,I1),8X,5HCURVE,/)
  715 FORMAT(4X,4HTIME,23X,8HWATERWAY,22X,9HDISCHARGE,
     *       /,5X,5(9X,I1),8X,5HCURVE,/)
  716 FORMAT(4X,4HTIME,28X,8HWATERWAY,27X,9HDISCHARGE,
     *       /,5X,6(9X,I1),8X,5HCURVE,/)
  717 FORMAT(4X,4HTIME,33X,8HWATERWAY,32X,9HDISCHARGE,
     *       /,5X,7(9X,I1),8X,5HCURVE,/)
  230 FORMAT(2X,F7.2,8F10.0)
  235 FORMAT(//,47H  DO YOU WANT THE INPUT DATA LISTED ON TERMINAL,/,
     *      14H  (1=YES,2=NO))
  240 FORMAT(///,13X,11HINFLOW DATA,20X,12HSTORAGE DATA,/,13X,
     *       11(1H*),20X,12(1H*),/,5X,14HTIME    INFLOW,4X
     *       9HDISCHARGE,8X,9HELEVATION,5X,7HSTORAGE,/)
  245 FORMAT(///,6X,11HINFLOW DATA,27X,12HSTORAGE DATA,/,6X,
     *       11(1H*),27X,12(1H*),/,5X,14HTIME    INFLOW,21X,
     *       9HELEVATION,5X,7HSTORAGE,/)
  250 FORMAT(2X,F7.2,2F11.0,9X,F9.2,1X,F11.0)
  255 FORMAT(2X,F7.2,F11.0,20X,F9.2,1X,F11.0)
  260 FORMAT(40X,F9.2,1X,F11.0)
  265 FORMAT(2X,F7.2,2F11.0)
  270 FORMAT(2X,F7.2,F11.0)
  275 FORMAT(//,2X,22HDISCHARGE VS ELEVATION,/,2X,22(1H*),/,
     *       2X,20HELEVATION  DISCHARGE,/)
  280 FORMAT(//,2X,22HDISCHARGE VS ELEVATION,/,2X,22(1H*),/,
     *       2X,32HELEVATION  DISCHARGE COEFFICIENT,//,
     *       2X,14HCREST LENGTH =,F10.2,/)
  285 FORMAT(2X,F9.2,1X,F10.0)
  290 FORMAT(2X,F9.2,6X,F10.3)
  951 FORMAT(1H1,//,21X,15HROUTING RESULTS,16X,5X,9HDISCHARGE,
     *       8H RESULTS,/,21X,15(1H*),16X,5X,17(1H*),//,4X,
     *       49HTIME     INFLOW    OUTFLOW    STORAGE   ELEVATION,
     *       3X,8HWATERWAY,4X,6HRATING,/,50X,9X,I1,
     *       8X,5HCURVE,/)
  952 FORMAT(1H1,//,21X,15HROUTING RESULTS,16X,10X,9HDISCHARGE,
     *       8H RESULTS,/,21X,15(1H*),16X,10X,17(1H*),//,4X,
     *       49HTIME     INFLOW    OUTFLOW    STORAGE   ELEVATION,
     *       8X,8HWATERWAY,9X,6HRATING,/,50X,2(9X,I1),
     *       8X,5HCURVE,/)
  953 FORMAT(1H1,//,21X,15HROUTING RESULTS,16X,15X,9HDISCHARGE,
     *       8H RESULTS,/,21X,15(1H*),16X,15X,17(1H*),//,4X,
     *       49HTIME     INFLOW    OUTFLOW    STORAGE   ELEVATION,
     *       13X,8HWATERWAY,14X,6HRATING,/,50X,3(9X,I1),
     *       8X,5HCURVE,/)
  954 FORMAT(1H1,//,21X,15HROUTING RESULTS,16X,20X,9HDISCHARGE,
     *       8H RESULTS,/,21X,15(1H*),16X,20X,17(1H*),//,4X,
     *       49HTIME     INFLOW    OUTFLOW    STORAGE   ELEVATION,
     *       18X,8HWATERWAY,19X,6HRATING,/,50X,4(9X,I1),
     *       8X,5HCURVE,/)
  955 FORMAT(1H1,//,21X,15HROUTING RESULTS,16X,25X,9HDISCHARGE,
     *       8H RESULTS,/,21X,15(1H*),16X,25X,17(1H*),//,4X,
     *       49HTIME     INFLOW    OUTFLOW    STORAGE   ELEVATION,
     *       23X,8HWATERWAY,24X,6HRATING,/,50X,5(9X,I1),
     *       8X,5HCURVE,/)
  956 FORMAT(1H1,//,21X,15HROUTING RESULTS,16X,30X,9HDISCHARGE,
     *       8H RESULTS,/,21X,15(1H*),16X,30X,17(1H*),//,4X,
     *       49HTIME     INFLOW    OUTFLOW    STORAGE   ELEVATION,
     *       28X,8HWATERWAY,29X,6HRATING,/,50X,6(9X,I1),
     *       8X,5HCURVE,/)
  957 FORMAT(1H1,//,21X,15HROUTING RESULTS,16X,35X,9HDISCHARGE,
     *       8H RESULTS,/,21X,15(1H*),16X,35X,17(1H*),//,4X,
     *       49HTIME     INFLOW    OUTFLOW    STORAGE   ELEVATION,
     *       33X,8HWATERWAY,34X,6HRATING,/,50X,7(9X,I1),
     *       8X,5HCURVE,/)
  605 FORMAT(2X,F7.2,3F11.0,F10.2,2X,6F10.0,2F9.0)
  610 FORMAT(2X,F7.2,2F11.0,E11.5,F10.2,2X,6F10.0,2F9.0)
  615 FORMAT(1H1)
C
C        ERROR STATEMENTS
C
  300 FORMAT(/,'  ERROR - RESERVOIR ELEVATION FALLS BELOW STORAGE DATA',
     *       /,10X,'ADD MORE STORAGE DATA')
  305 FORMAT(/,'  ERROR - RESERVOIR ELEVATION EXCEEDS STORAGE DATA',
     *      /,10X,'ADD MORE STORAGE DATA')
  310 FORMAT(/,'  ERROR - OUTFLOW EXCEEDS INFLOW THROUGHOUT ENTIRE ROU',
     *       'TING',/,10X,'BEGINNING RESERVOIR ELEVATION IS MAINTAINED')
  315 FORMAT(/,'  ERROR - RESERVOIR AT MAXIMUM RESERVOIR ELEVATION',
     *       /,10X,'RAISE MAXIMUM ELEVATION')
  320 FORMAT(/,'  ERROR - RESERVOIR ELEVATION LESS THAN DISCHARGE ',
     *       'CURVE DATA',/,10X,'ADD MORE DISCHARGE DATA')
  325 FORMAT(/,'  ERROR - RESERVOIR ELEVATION EXCEEDS DISCHARGE ',
     *       'CURVE DATA',/,10X,'ADD MORE DISCHARGE DATA')
  330 FORMAT(/,'  ERROR - ROUTING DOES NOT CONVERGE AFTER 30 ',
     *       'ITERATIONS',/,10X,'REVIEW INPUT DATA AND CHECK USING THE',
     *       ' ROUT DEBUG')
  335 FORMAT(/,'  ERROR - ADJUSTABLE CREST LENGTH ITERATES TO ZERO',/,
     *       10X,'CHECK ROUTING AND WATERWAY PARAMETERS')
  340 FORMAT(/,'  ERROR - ADJUSTABLE CREST ELEVATION ITERATES TO THE',
     *       ' MAX. W.S. ELEVATION',/,10X,'CHECK ROUTING AND WATERWAY',
     *       ' PARAMETERS')
  345 FORMAT(/,'  ERROR - INITIAL ESTIMATE OF THE CREST LENGTH OR ',
     *       'ELEVATION',/,10X,'IS NOT CLOSE ENOUGH TO ACTUAL VALUE.',
     *       '  A NEW',/,10X,'ESTIMATE MUST BE PROVIDED.',
     *       /,10X,'LAST USED CREST LENGTH =',F10.1,
     *       /,10X,'LAST USED CREST ELEVATION =',F10.2)
  99  IF(IPC(2).EQ.0) IPOP=IPOP3
      IF(NSP1.EQ.0) NSP=0
      RETURN
      END
      SUBROUTINE PLOTOUT (EM,QTM,QIM)
C
C        ROUTINE TO PROVIDE PLOT FILE
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
!
!
!	Extended Arrays jfe 18-NOV-2005 change 1201 & 1200 to 60000
!					change 501 to 50000
!
      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
     *      ,PT,TI(60000),QI(60000),QOW(60000),EI(50000),SI(50000)
     *      ,EQ(50000),QE(50000),QT(60000),Q(60000,8),EL(60000)
     *      ,SO(60000),INFILE
!      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
!     *      ,PT,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501)
!     *      ,QE(501),QT(1200),Q(1200,8),EL(1200),SO(1200)
!     *      ,INFILE
!
!
!      COMMON NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN,PT
!     *      ,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501),QE(501)
!     *      ,QT(1200),Q(1200,8),EL(1200),SO(1200),INFILE,BL
!
!
!
      CHARACTER NFEAT*10,NFLUD*10,HEADNG*10,SWHEAD*10
      CHARACTER INFILE*63
  10  WRITE(7,100) NSP,MSP,IST,IED
      WRITE(7,110) TI(1),TI(IST),TI(IED),ELBEG,EM,QIM,QTM
      DO 2 I=1,IED
      IF(IPC(1).EQ.2.OR.IPC(1).EQ.4) GO TO 4
      WRITE(7,120) TI(I),QI(I)*PT,QT(I),SO(I),EL(I),(Q(I,J),J=1,8)
      GO TO 2
  4   WRITE(7,125) TI(I),QI(I)*PT,QT(I),SO(I),EL(I),(Q(I,J),J=1,8)
  2   CONTINUE
      REWIND 7
  100 FORMAT(2(2X,I1),2I5)
  110 FORMAT(2X,3F8.2,2F10.2,2F12.0)
  120 FORMAT(2X,F8.2,3F12.0,F10.2,8F9.0)
  125 FORMAT(2X,F8.2,2F12.0,E12.5,F10.2,8F9.0)
      RETURN
      END
      SUBROUTINE NEWRUN (IEND)
C
C        ROUTINE TO CHANGE ROUTING PARAMTERS
C
      COMMON /A/ IPC(20),IPOP,NSP,MSP,ISTP(7),SPWY(7,7),ISCF(7),QMAX(7)
     *           ,ELBEG,ELMAX,ELNOR,ELERR,DE,DL,NR,IST,IED
!
!
!	Extended Arrays jfe 18-NOV-2005 change 1201 & 1200 to 60000
!					change 501 to 50000
!
      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
     *      ,PT,TI(60000),QI(60000),QOW(60000),EI(50000),SI(50000)
     *      ,EQ(50000),QE(50000),QT(60000),Q(60000,8),EL(60000)
     *      ,SO(60000),INFILE
!      COMMON BL,NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN
!     *      ,PT,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501)
!     *      ,QE(501),QT(1200),Q(1200,8),EL(1200),SO(1200)
!     *      ,INFILE
!
!
!      COMMON NFEAT(3),NFLUD(3),HEADNG(3),SWHEAD(7,3),TDIS,M,N,M1,ALEN,PT
!     *      ,TI(1201),QI(1201),QOW(1201),EI(501),SI(501),EQ(501),QE(501)
!     *      ,QT(1200),Q(1200,8),EL(1200),SO(1200),INFILE,BL
!
!
!
      CHARACTER NFEAT*10,NFLUD*10,HEADNG*10,SWHEAD*10
      CHARACTER INFILE*63
C      RESET VALUES OF DE, DL, AND NR for solving for crest length
C      or crest elevation.
      DE=1.0
      DL=10.0
      NR=1
C      BL set to 1 so output for additional runs start at top of page
      BL=1
  2   WRITE(6,200)
      READ(5,*,END=2) IEND
      IF(IEND.LT.1.OR.IEND.GT.2) GO TO 2
      IF(IEND.EQ.2) RETURN
  4   WRITE(6,205)
      READ(5,*,END=4) ICODE
      IF(ICODE.LT.1.OR.ICODE.GT.9) GO TO 4
      GO TO (6,8,12,14,16,18,18,18,26) ICODE
C
C        HEADING
C
  6   WRITE(6,250)(HEADNG(I),I=1,3)
      READ(5,255,END=6) (HEADNG(I),I=1,3)
      GO TO 28
C
C        IPC CHANGES
C
  8   WRITE(6,208)
      DO 9,I=1,10
      J=I+10
  9   WRITE(6,209) I,IPC(I),J,IPC(J)
      WRITE(6,210)
      READ(5,*,END=8) IA
      IF(IA.LT.1.OR.IA.GT.20) GO TO 8
  10  WRITE(6,215) IA
      READ(5,*,END=10) IPC(IA)
      IF(IA.EQ.1.AND.IPC(IA).GT.0.AND.IPC(IA).LT.5) GO TO 28
      IF(IA.GT.1.AND.IA.LT.7.AND.IPC(IA).LT.2) GO TO 11
      IF(IA.EQ.7.AND.IPC(IA).LT.3) GO TO 11
      IF(IA.EQ.8.AND.IPC(IA).LT.2) GO TO 11
      IF(IA.EQ.9.AND.IPC(IA).LT.4) GO TO 11
      IF(IA.GT.9.AND.IPC(IA).LT.2) GO TO 11
      GO TO 10
  11  IF(IPC(IA).LT.0) GO TO 10
      GO TO 28
C
C        ELEVATION TOLERANCE
C
  12  WRITE(6,220) ELERR
      READ(5,*,END=12) ELERR
      IF(ELERR.LE.0.0) GO TO 12
      GO TO 28
C
C        MAXIMUM ALLOWABLE TOTAL DISCHARGE
C
  14  IF(TDIS.EQ.0) WRITE(6,223)
      IF(TDIS.EQ.0) GO TO 15
      WRITE(6,224) TDIS
  15  WRITE(6,225)
      READ(5,*,END=14) TDIS
      IF(TDIS.LT.0.0) GO TO 14
      GO TO 28
C
C        RESERVOIR ELEVATION PARAMETERS
C
  16  WRITE(6,227) ELBEG,ELMAX,ELNOR
      READ(5,*,END=16) ELBEG,ELMAX,ELNOR
      IF(ELMAX.LE.0.0) GO TO 16
      GO TO 28
C
C        WATERWAY PARAMETER 1
C
  18  WRITE(6,230)
      DO 19,I=1,7
  19  WRITE(6,232) I,(SWHEAD(I,J),J=1,3)
      WRITE(6,233)
      READ(5,*,END=18) NUM
      IF(NUM.LT.1.OR.NUM.GT.7) GO TO 18
      IF(ICODE-7) 20,22,24
  20  WRITE(6,235) NUM,ISTP(NUM),(SWHEAD(NUM,J),J=1,3)
      READ(5,100,END=20) ISTP(NUM),(SWHEAD(NUM,J),J=1,3)
      IF(ISTP(NUM).LT.1.OR.ISTP(NUM).GT.5) GO TO 20
      GO TO 28
C
C        SPILLWAY PARAMETER 2
C
  22  WRITE(6,240) (SPWY(NUM,J),J=1,7), ISCF(NUM)
      READ(5,*,END=22) (SPWY(NUM,J),J=1,7), ISCF(NUM)
      IF(ISCF(NUM).LT.0.OR.ISCF(NUM).GT.1) GO TO 22
      GO TO 28
C
C        WATERWAY PARAMETER 3
C
  24  IF(QMAX(NUM).EQ.0) WRITE(6,241) NUM
      IF(QMAX(NUM).EQ.0) GO TO 25
      WRITE(6,243) NUM, QMAX(NUM)
  25  WRITE(6,245) NUM
      READ(5,*,END=24) QMAX(NUM)
      IF(QMAX(NUM).LT.0.0) GO TO 24
      GO TO 28
C
C        INFLOW HYDROGRAPH ADJUSTMENT FACTOR
C
  26  WRITE(6,258) PT
      READ(5,*,END=26) PT
      IF(PT.LE.0.0) GO TO 26
      GO TO 28
  28  WRITE(6,260)
      READ(5,*,END=28) INEXT
      IF(INEXT.LT.1.OR.INEXT.GT.2) GO TO 28
      IF(INEXT.EQ.1) GO TO 4
      RETURN
C
C        FORMATS
C
  100 FORMAT(I1,1X,3A10)
  200 FORMAT(/,46H  WHAT DO YOU WISH TO DO NEXT  (1) CHANGE DATA,
     *       /,31X,8H(2) STOP,/,13H  TYPE 1 OR 2)
  205 FORMAT(/,47H  SELECT THE CODE NUMBER FOR THE CHANGE DESIRED,
     *       /,10X,11H1 = HEADING,
     *       /,10X,13H2 = IPC ARRAY,
     *       /,10X,23H3 = ELEVATION TOLERANCE,
     *       /,10X,34H4 = MAXIMUM TOTAL DISCHARGE (TDIS),
     *       /,10X,34H5 = RESERVOIR ELEVATION PARAMETERS,
     *       /,10X,24H6 = WATERWAY PARAMETER 1,
     *       /,10X,24H7 = WATERWAY PARAMETER 2,
     *       /,10X,24H8 = WATERWAY PARAMETER 3,
     *       /,10X,39H9 = INFLOW HYDROGRAPH ADJUSTMENT FACTOR,
     *       /,19H  ENTER CODE NUMBER)
  208 FORMAT(/,'  THE CURRENT IPC VALUES ARE:',/,/,
     *       '   IPC   VALUE    IPC   VALUE')
  209 FORMAT(3X,I2,6X,I1,7X,I2,5X,I1)
  210 FORMAT(/,/,33H  WHICH IPC DO YOU WISH TO CHANGE)
  215 FORMAT(32H  WHAT IS THE NEW VALUE FOR IPC(,I2,1H))
  220 FORMAT(/,'  THE CURRENT ELEVATION TOLERANCE IS: ',F7.4,/,
     *      /,50H  WHAT IS THE NEW VALUE OF THE ELEVATION TOLERANCE)
  223 FORMAT(/,'  TOTAL DISCHARGE IS CURRENTLY UNCONTROLED')
  224 FORMAT(/,'  TOTAL DISCHARGE IS CURRENTLY LIMITED TO: ',F10.1)
  225 FORMAT(/,50H  WHAT IS THE NEW VALUE OF MAXIMUM TOTAL DISCHARGE)
  227 FORMAT(/,'  THE CURRENT ELEVATION PARAMETERS ARE: ',/,
     *       /,'     BEGINNING  MAXIMUM    POOL',
     *       /,'       ELEV      ELEV      ELEV',/,3X,3F10.2,/,
     *       /,32H  INPUT NEW RESERVOIR ELEVATIONS,/,
     *         36H  BEG. ELEV., MAX. ELEV., POOL ELEV.)
  230 FORMAT(/,'  WATERWAY')
  232 FORMAT(6X,I1,5X,3A10)
!  233 FORMAT(/,33H  INPUT WATERWAY NUMBER TO CHANGE,)
  233 FORMAT(/,33H  INPUT WATERWAY NUMBER TO CHANGE)
  235 FORMAT(/,'  THE CURRENT WATERWAY TYPE AND HEADING FOR WATERWAY ',
     *       I1,' IS:',/,'  TYPE    - ',I1,/,'  HEADING - ',3A10,/,/,
     *       46H  INPUT WATERWAY TYPE AND NEW WATERWAY HEADING,/,
     *       '  TYPE,HEADING')
  240 FORMAT(/,'  THE CURRENT PARAMETERS ARE:',/,/,'    COEF',
     *       '      HEAD','      ELEV','    LENGTH','     EXPON',
     *       '     RATIO','      GATE','   FLOW',/,F8.2,6F10.2,6X,I1,/,
     *      /, 46H  INPUT NEW WATERWAY PARAMETERS IN FREE FORMAT,
     *      /,45H  COEF,HEAD,ELEV,LENGTH,EXPON,RATIO,GATE,FLOW)
  241 FORMAT(/,'  CURRENTLY WATERWAY ',I1,
     *        ' HAS NO MAXIMUM DISCHARGE LIMIT')
  243 FORMAT(/,'  THE CURRENT MAXIMUM DISCHARGE LIMIT FOR WATERWAY ',
     *       I1,' IS ',F10.1)
  245 FORMAT(/,17H  INPUT WATERWAY ,I1,18H MAXIMUM DISCHARGE)
  250 FORMAT(/,'  THE CURRENT HEADING IS:',/,/,2X,3A10,/,/,
     *        '  WHAT IS THE NEW HEADING')
  255 FORMAT(3A10)
  258 FORMAT(/,'  THE CURRENT INFLOW ADJUSTMENT FACTOR IS: ',F7.3,/,
     *       /,'  INPUT THE NEW INFLOW HYDROGRAPH ADJUSTMENT FACTOR',/,
     *         '  LESS THAN 1.0 = REDUCTION',/,
     *         '  GREATER THAN 1.0 = INCREASE')
  260 FORMAT(/,52H  DO YOU WISH TO CHANGE ANOTHER PARAMETER,1=YES,2=NO)
      END
